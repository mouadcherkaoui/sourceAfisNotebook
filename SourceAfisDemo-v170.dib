#!csharp

#r "nuget: SourceAfis, 1.7.0"
#r "nuget: SkiaSharp"

#!pwsh

$helperClass = @"
using System;
namespace extensions 
{
    public static class ObjectExtensions 
    {
        public static TResult PipeTo<TSource, TResult>(this TSource source, Func<TSource, TResult> action) 
        {
            return action(source);
        }
    }
}
"@

Add-Type -TypeDefinition $helperClass

#!csharp

using System.IO;
using System.Drawing;
using System.Drawing.Imaging;
using SkiaSharp;
using SourceAFIS.Simple;
using Microsoft.DotNet.Interactive.Formatting;

#!csharp

private void Display(Bitmap source) 
{
    var memStream = new MemoryStream();
    source.Save(memStream, ImageFormat.Png);
    string base64str = Convert.ToBase64String(memStream.ToArray());
    display(PocketViewTags.img[src: "data:image/png;base64," + base64str]);
}

#!csharp

private Person SetFingerprint(int id, Bitmap fingerprint) 
{
    Fingerprint fp = new Fingerprint();
    fp.AsBitmap = fingerprint;

    Person person = new Person(fp);
    person.Id = id;
    return person;
}

#!csharp

var engine = new AfisEngine();

#!csharp

var right_ring = new Bitmap("right_ring.bmp");
var person_probe = SetFingerprint(1, right_ring);

engine.Extract(person_probe);

Display(right_ring);

#!csharp

var right_ring_test = new Bitmap("right_ring_test.bmp");
var person_candidate = SetFingerprint(2, right_ring_test);

engine.Extract(person_candidate);

Display(right_ring_test);

#!csharp

var verificationResult = engine.Verify(person_probe, person_candidate);
verificationResult.Display();
